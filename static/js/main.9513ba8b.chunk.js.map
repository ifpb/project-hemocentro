{"version":3,"sources":["utils/customTheme.js","components/Navbar.js","services/index.js","services/Professional.js","components/ProfessionalForm.js","pages/ProfessionalRegister.js","pages/ProfessionaManager.js","components/ProfessionalEditForm.js","pages/ProfessionalEdit.js","pages/Dashboard.js","App.js","index.js"],"names":["theme","createMuiTheme","palette","secondary","light","main","dark","primary","useStyles","makeStyles","navbar","height","justifyContent","alignItems","title","fontWeight","titleLink","textDecoration","color","Navbar","classes","ThemeProvider","className","root","AppBar","position","to","Typography","variant","api","axios","create","baseURL","data","post","response","get","id","put","delete","main_card","width","display","flexDirection","padding","input","marginTop","btn","alert","marginBottom","RegisterSchema","Yup","shape","name","required","email","operation","ProfessionalForm","history","useHistory","useState","submit","setSubmit","submitError","setSubmitError","onSubmit","values","a","Professional","setTimeout","push","Paper","elevation","Alert","severity","initialValues","validationSchema","handleChange","handleBlur","handleSubmit","errors","touched","TextField","error","label","onChange","onBlur","value","helperText","FormControl","InputLabel","NativeSelect","aria-label","FormHelperText","Button","onClick","main_content","ProfessionalRegister","Container","maxWidth","marginRight","table","Dashboard","professionalsData","setProfessionalsData","setError","useEffect","fetchApi","handleDelete","updatedProfessionals","filter","_id","TableContainer","component","Table","TableHead","TableRow","TableCell","TableBody","map","row","key","pathname","state","professional","ProfessionalEdit","useLocation","menu","button_margin","matchMediaQuery","useMediaQuery","size","App","basename","process","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9513ba8b.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n    palette: {\n        secondary: {\n            light: '#f6685e',\n            main: '#f44336',\n            dark: '#aa2e25'\n        },\n        primary: {\n            light: '#637bfe',\n            main: '#2196f3',\n            dark: '#2a3eb1'\n        },\n    },\n})\n\nexport default theme","import React from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport { \n    makeStyles, \n    Typography, \n    ThemeProvider \n} from '@material-ui/core/'\nimport theme from '../utils/customTheme'\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n    navbar: {\n        height: '60px',\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    title: {\n        fontWeight: 'bold',\n    },\n    titleLink: {\n        textDecoration: 'none',\n        color: 'inherit'\n    }\n})\n\nexport default function Navbar() {\n    const classes = useStyles()\n    return (\n        <ThemeProvider theme={theme}>\n            <div className={classes.root}>\n                <AppBar position=\"static\" className={classes.navbar}>\n                    <Link to=\"/\" className={classes.titleLink}>\n                        <Typography variant=\"h5\" className={classes.title}>\n                            Hemovigilância\n                        </Typography>\n                    </Link>\n                </AppBar>\n            </div>\n        </ThemeProvider>\n    )\n}\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://hemovigiliancia--api.herokuapp.com/api',\n});\n\nexport default api;","import api from './index'\n\nexport default {\n    async register(data) {\n        const response = await api.post(\"/professionals\", data)\n        return response\n    },\n    async getAll() {\n        const response = await api.get(\"/professionals\")\n        return response\n    },\n    async getProfessional(id) {\n        const response = await api.get(`/professionals/${id}`)\n        return response\n    },\n    async edit(id, data) {\n        const response = await api.put(`/professionals/${id}`, data)\n        return response\n    },\n    async delete(id) {\n        const response = await api.delete(`/professionals/${id}`)\n        return response\n    }\n}","import React, { useState } from 'react'\nimport {\n    makeStyles,\n    Typography,\n    Paper,\n    TextField,\n    FormControl,\n    InputLabel,\n    FormHelperText,\n    NativeSelect,\n    Button,\n} from '@material-ui/core/'\nimport { Alert } from '@material-ui/lab'\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useHistory } from 'react-router-dom';\nimport Professional from '../services/Professional'\nconst useStyles = makeStyles({\n    main_card: {\n        width: '50%',\n        display: 'flex',\n        flexDirection: 'column',\n        padding: '70px'\n    },\n    input: {\n        marginTop: '15px'\n    },\n    btn: {\n        marginTop: '10px'\n    },\n    alert: {\n        marginBottom: '20px',\n    }\n})\n\nconst RegisterSchema = Yup.object().shape({\n    name: Yup.string().required('Campo Obrigatório'),\n    email: Yup.string().email('Email inválido').required('Campo obrigatório'),\n    operation: Yup.string().required('Campo Obrigatório'),\n});\n\nexport default function ProfessionalForm() {\n    const classes = useStyles()\n    const history = useHistory()\n    const [submit, setSubmit] = useState(false)\n    const [submitError, setSubmitError] = useState(false)\n\n    const onSubmit = async (values) => {\n        try {\n            await Professional.register(values)\n            setSubmitError(false)\n            setSubmit(true)\n            setTimeout(() => history.push(\"/\"), 2000)\n        }\n        catch (err) {\n            setSubmitError(true)\n        }\n    }\n    return (\n        <>\n            <Paper elevation={3} className={classes.main_card}>\n                {submit ? (\n                    <Alert\n                        severity=\"success\"\n                        className={classes.alert}>Cadastro realizado com sucesso!\n                    </Alert>)\n                    : null}\n                {submitError ? (\n                    <Alert\n                        severity=\"error\"\n                        className={classes.alert}>Ocorreu um problema ao tentar se comunicar com o servidor\n                        , tente novamente!\n                    </Alert>)\n                    : null}\n                <Typography variant='h6'>Adicionar novo profissional</Typography>\n                <Formik\n                    initialValues={{\n                        name: '',\n                        email: '',\n                        operation: ''\n                    }}\n                    validationSchema={RegisterSchema}\n                    onSubmit={onSubmit}\n                >\n                    {({ handleChange, handleBlur, handleSubmit, values, errors, touched }) => (\n                        <>\n                            <TextField\n                                error={errors.name && touched.name ? true : false}\n                                id=\"name\"\n                                label=\"Nome\"\n                                className={classes.input}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                value={values.name}\n                                helperText={\n                                    errors.name && touched.name ? (\n                                        errors.name\n                                    ) : null\n                                }\n                            />\n                            <TextField\n                                error={errors.email && touched.email ? true : false}\n                                id=\"email\"\n                                label=\"E-mail\"\n                                className={classes.input}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                value={values.email}\n                                helperText={\n                                    errors.email && touched.email ? (\n                                        errors.email\n                                    ) : null\n                                }\n                            />\n                            <FormControl className={classes.input}\n                                error={errors.operation && touched.operation ? true : false}>\n                                <InputLabel id=\"operation\">Atuação</InputLabel>\n                                <NativeSelect\n                                    id=\"operation\"\n                                    value={values.operation}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                >\n                                    <option aria-label=\"None\" value=\"\" />\n                                    <option value={'Enfermeiro(a)'}>Enfermeiro(a)</option>\n                                    <option value={'Medico(a)'}>Médico(a)</option>\n                                    <option value={'Administrativo'}>Administrativo</option>\n                                </NativeSelect>\n                                <FormHelperText>\n                                    {\n                                        errors.operation && touched.operation ? (\n                                            errors.operation\n                                        ) : null\n                                    }\n                                </FormHelperText>\n                            </FormControl>\n                            <Button\n                                variant=\"contained\"\n                                color=\"secondary\"\n                                className={classes.btn}\n                                onClick={handleSubmit}\n                            >\n                                Registrar\n                            </Button>\n                        </>\n                    )}\n                </Formik>\n            </Paper>\n        </>\n    )\n}\n","import React from 'react'\nimport Navbar from '../components/Navbar'\nimport ProfessionalForm from '../components/ProfessionalForm'\nimport { \n    makeStyles, \n    Container, \n    ThemeProvider \n} from '@material-ui/core/'\nimport theme from '../utils/customTheme'\n\nconst useStyles = makeStyles({\n    main_content: {\n        marginTop: '100px',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n})\n\nexport default function ProfessionalRegister() {\n    const classes = useStyles()\n    return (\n        <ThemeProvider theme={theme}>\n            <Navbar />\n            <Container maxWidth=\"md\" className={classes.main_content}>\n                <ProfessionalForm />\n            </Container>\n        </ThemeProvider>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport Navbar from '../components/Navbar'\nimport {\n    makeStyles,\n    Container,\n    ThemeProvider,\n    TableContainer,\n    Table,\n    TableHead,\n    TableRow,\n    TableCell,\n    TableBody,\n    Paper,\n    Button\n} from '@material-ui/core/'\nimport { Alert } from '@material-ui/lab'\nimport theme from '../utils/customTheme'\nimport Professional from '../services/Professional'\nimport { useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles({\n    main_content: {\n        marginTop: '100px',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    btn: {\n        marginRight: '10px'\n    },\n    table: {\n        width: '100%'\n    }\n})\n\nexport default function Dashboard() {\n    const classes = useStyles()\n    const history = useHistory()\n    const [professionalsData, setProfessionalsData] = useState()\n    const [error, setError] = useState(false)\n\n    useEffect(() => {\n        async function fetchApi() {\n            try{\n                const response = await Professional.getAll()\n                setProfessionalsData(response.data)\n            } catch(err) {\n                setError(true)\n            }\n        }\n        fetchApi()\n    }, [])\n\n    const handleDelete = async (id) => {\n        try {\n            await Professional.delete(id)\n            const updatedProfessionals = professionalsData.filter((data) => data._id !== id)\n            setProfessionalsData(updatedProfessionals)\n            setError(false)\n        } catch (error) {\n            setError(true)\n        }\n    }\n\n    return (\n        <ThemeProvider theme={theme}>\n            <Navbar />\n            <Container maxWidth=\"md\" className={classes.main_content}>\n                {error ? (<Alert\n                    severity=\"error\">\n                    Ocorreu um problema ao tentar se comunicar com o servidor\n                    , tente novamente!\n                </Alert>) : null}\n                <TableContainer component={Paper}>\n                    <Table className={classes.table} aria-label=\"simple table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>Nome</TableCell>\n                                <TableCell>Email</TableCell>\n                                <TableCell>Atuação</TableCell>\n                                <TableCell>Ações</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {professionalsData?.map((row) => (\n                                <TableRow key={row.name}>\n                                    <TableCell>{row.name}</TableCell>\n                                    <TableCell>{row.email}</TableCell>\n                                    <TableCell>{row.operation}</TableCell>\n                                    <TableCell>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            className={classes.btn}\n                                            onClick={() => {\n                                                history.push({\n                                                    pathname: \"professional/edit\",\n                                                    state: { data: row }\n                                                })\n                                            }\n                                            }\n                                        >\n                                            Editar\n                                        </Button>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"secondary\"\n                                            onClick={() => handleDelete(row._id)}\n                                        >\n                                            Excluir\n                                        </Button>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Container>\n        </ThemeProvider>\n    )\n}\n","/* eslint-disable react/prop-types */\nimport React, {useState} from 'react'\nimport {\n    makeStyles,\n    Typography,\n    Paper,\n    TextField,\n    FormControl,\n    InputLabel,\n    FormHelperText,\n    NativeSelect,\n    Button,\n} from '@material-ui/core/'\nimport { Alert } from '@material-ui/lab'\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {useHistory} from 'react-router-dom';\nimport Professional from '../services/Professional'\n\nconst useStyles = makeStyles({\n    main_card: {\n        width: '50%',\n        display: 'flex',\n        flexDirection: 'column',\n        padding: '70px'\n    },\n    input: {\n        marginTop: '15px'\n    },\n    btn: {\n        marginTop: '10px'\n    },\n    alert: {\n        marginBottom: '20px',\n    }\n})\n\nconst RegisterSchema = Yup.object().shape({\n    name: Yup.string().required('Campo Obrigatório'),\n    email: Yup.string().email('Email inválido').required('Campo obrigatório'),\n    operation: Yup.string().required('Campo Obrigatório'),\n});\n\nexport default function ProfessionalForm({ professional }) {\n    const classes = useStyles()\n    const history = useHistory()\n    const [submit, setSubmit] = useState(false)\n    const [submitError, setSubmitError] = useState(false)\n    \n    const onSubmit = async (values) => {\n        try {\n            await Professional.edit(professional._id,values)\n            setSubmitError(false)\n            setSubmit(true)\n            setTimeout(() => history.push(\"/\"), 1000)\n        }\n        catch (err) {\n            setSubmitError(true)\n        }\n    }\n    return (\n        <>\n            <Paper elevation={3} className={classes.main_card}>\n                {submit ? (\n                    <Alert\n                        severity=\"success\"\n                        className={classes.alert}>Cadastro editado com sucesso!\n                    </Alert>)\n                    : null}\n                {submitError ? (\n                    <Alert\n                        severity=\"error\"\n                        className={classes.alert}>Ocorreu um problema ao tentar se comunicar com o servidor\n                        , tente novamente!\n                    </Alert>)\n                    : null}\n                <Typography variant='h6'>Editar cadastro</Typography>\n                <Formik\n                    initialValues={{\n                        name: professional.name,\n                        email: professional.email,\n                        operation: professional.operation\n                    }}\n                    validationSchema={RegisterSchema}\n                    onSubmit={onSubmit}\n                >\n                    {({ handleChange, handleBlur, handleSubmit, values, errors, touched }) => (\n                        <>\n                            <TextField\n                                error={errors.name && touched.name ? true : false}\n                                id=\"name\"\n                                label=\"Nome\"\n                                className={classes.input}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                value={values.name}\n                                helperText={\n                                    errors.name && touched.name ? (\n                                        errors.name\n                                    ) : null\n                                }\n                            />\n                            <TextField\n                                error={errors.email && touched.email ? true : false}\n                                id=\"email\"\n                                label=\"E-mail\"\n                                className={classes.input}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                value={values.email}\n                                helperText={\n                                    errors.email && touched.email ? (\n                                        errors.email\n                                    ) : null\n                                }\n                            />\n                            <FormControl className={classes.input}\n                                error={errors.operation && touched.operation ? true : false}>\n                                <InputLabel id=\"operation\">Atuação</InputLabel>\n                                <NativeSelect\n                                    id=\"operation\"\n                                    value={values.operation}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                >\n                                    <option aria-label=\"None\" value=\"\" />\n                                    <option value={'Enfermeiro(a)'}>Enfermeiro(a)</option>\n                                    <option value={'Medico(a)'}>Médico(a)</option>\n                                    <option value={'Administrativo'}>Administrativo</option>\n                                </NativeSelect>\n                                <FormHelperText>\n                                    {\n                                        errors.operation && touched.operation ? (\n                                            errors.operation\n                                        ) : null\n                                    }\n                                </FormHelperText>\n                            </FormControl>\n                            <Button\n                                variant=\"contained\"\n                                color=\"secondary\"\n                                className={classes.btn}\n                                onClick={handleSubmit}\n                            >\n                                Editar\n                            </Button>\n                        </>\n                    )}\n                </Formik>\n            </Paper>\n        </>\n    )\n}","import React from 'react'\nimport Navbar from '../components/Navbar'\nimport ProfessionalEditForm from '../components/ProfessionalEditForm'\nimport { \n    makeStyles, \n    Container, \n    ThemeProvider \n} from '@material-ui/core/'\nimport theme from '../utils/customTheme'\nimport {useLocation} from 'react-router-dom'\n\nconst useStyles = makeStyles({\n    main_content: {\n        marginTop: '100px',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n})\n\nexport default function ProfessionalEdit() {\n    const classes = useStyles()\n    const location = useLocation()\n    //Acessando estado enviado pela rota\n    const { data } = location.state\n    return (\n        <ThemeProvider theme={theme}>\n            <Navbar />\n            <Container maxWidth=\"md\" className={classes.main_content}>\n                <ProfessionalEditForm professional={data}/>\n            </Container>\n        </ThemeProvider>\n    )\n}\n","import React from 'react'\nimport {\n    Paper,\n    makeStyles,\n    ThemeProvider,\n    Button,\n    Container,\n    useMediaQuery,\n} from '@material-ui/core/'\nimport Navbar from '../components/Navbar'\nimport theme from '../utils/customTheme'\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n    main: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    menu: {\n        marginTop: '150px',\n        width: '80%',\n        display: 'flex',\n        justifyContent: 'center',\n        padding: '40px'\n    },\n    button_margin: {\n        marginRight: '20px'\n    }\n})\n\nexport default function Dashboard() {\n    const classes = useStyles()\n    const history = useHistory()\n    const matchMediaQuery = useMediaQuery('(max-width: 600px)')\n\n    return (\n        <ThemeProvider theme={theme}>\n            <Navbar />\n            <Container maxWidth=\"md\" className={classes.main}>\n                <Paper elevation={3} className={classes.menu}>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        size={matchMediaQuery ? \"medium\" : \"large\"}\n                        className={classes.button_margin}\n                        onClick={() => history.push(\"/professional/register\")}\n                    >\n                        Cadastrar\n                    </Button>\n                    <Button\n                        variant=\"outlined\"\n                        size={matchMediaQuery ? \"medium\" : \"large\"}\n                        onClick={() => history.push(\"/professional\")}\n                    >\n                        Gerenciar\n                    </Button>\n                </Paper>\n            </Container>\n        </ThemeProvider >\n    )\n}\n","import React from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\n//Components\nimport ProfessionalRegister from './pages/ProfessionalRegister'\nimport ProfessionalManager from './pages/ProfessionaManager'\nimport ProfessionalEdit from './pages/ProfessionalEdit'\nimport Dashboard from './pages/Dashboard'\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route exact path=\"/\">\n            <Dashboard />\n          </Route>\n          <Route exact path=\"/professional\">\n            <ProfessionalManager />\n          </Route>\n          <Route exact path=\"/professional/register\">\n            <ProfessionalRegister />\n          </Route>\n          <Route exact path=\"/professional/edit\">\n            <ProfessionalEdit />\n          </Route>\n        </Switch>\n    </Router>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}